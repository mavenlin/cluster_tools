#!/usr/bin/env bash

source $(dirname $0)/argparse "$@" || exit 1
source $(dirname $0)/slurm_utils.sh || exit 1
SLURM_PORT=$(find_port "$CLUSTER")
$(dirname $0)/slurm_connect "$CLUSTER"

# Collect logs from the job ids that are passed in from the stdin
function join_by { local IFS="$1"; shift; echo "$*"; }
jobids=()
while read line
do
    jobids+=($line)
done
if [ ${#jobids[@]} -eq 0 ]
then
    echo "[Error] there's no job id piped to tb"
    exit 1
fi
jobids=$(join_by , "${jobids[@]}")
folder=$(date '+%Y%m%d_%H%M%S')
dir="~/project/run/tensorboard/$folder"
echo "Opening tensorboard for $jobids" >> /dev/stderr
ssh_nocheck -p$SLURM_PORT $USER@localhost "mkdir -p $dir && echo $jobids | tr , '\n' | xargs -I{} sh -c \"ln -s ~/project/jobs/{} $dir/{}\""

TMPJOBNAME="$(date +"%Y%m%d%H%M%S")"
# Launch tensorboard on the symlinked folder
function kill_sleep {
    ssh_nocheck -p$SLURM_PORT $USER@localhost "scancel -u $USER -n $TMPJOBNAME"
}
trap "kill_sleep; exit 1" INT

DIR=$dir
RUNNING_NODE=$(ssh_nocheck -p$SLURM_PORT $USER@localhost "squeue -u $USER --Format=NODELIST,STATE" | grep RUNNING | cut -d " " -f1 | head -1)
if [ -z "$RUNNING_NODE" ] || [ -z "$REUSE" ]
then
    echo "Allocating Resource" >> /dev/stderr
    ssh_nocheck -n -t -t -p$SLURM_PORT $USER@localhost "salloc --account=def-bengioy -c 4 --mem 16G sleep 1h" &
    salloc_pid=$!
else
    echo "Reusing Resource" >> /dev/stderr
fi

while [ -z "$RUNNING_NODE" ]
do
    sleep 5
    RUNNING_NODE=$(ssh_nocheck -p$SLURM_PORT $USER@localhost "squeue -u $USER --Format=NODELIST,STATE" | grep RUNNING | cut -d " " -f1)
done
function kill_tensorboard {
    ssh_nocheck -J $USER@localhost:$SLURM_PORT $USER@$RUNNING_NODE "pkill tensorboard"
}
trap "kill_sleep; kill_tensorboard; exit 1" INT

PORT=$(ssh_nocheck -J $USER@localhost:$SLURM_PORT $USER@$RUNNING_NODE "python -c 'import socket; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.bind((\"localhost\",0)); print(s.getsockname()[1])'")
echo "Opening tensorboard on $USER@$RUNNING_NODE:$PORT" >> /dev/stderr
ssh_nocheck -t -t -J $USER@localhost:$SLURM_PORT -L $PORT:localhost:$PORT $USER@$RUNNING_NODE "source ~/tf2/bin/activate && tensorboard --logdir $DIR --bind_all --port $PORT" &
tb_pid=$!

echo "http://localhost:$PORT" >> /dev/stderr
OS="`uname`"
if [[ "$OS" == "Darwin" ]]
then
    open "http://localhost:$PORT"
else
    xdg-open "http://localhost:$PORT"
fi
wait
